AWSTemplateFormatVersion: '2010-09-09'

# Heavily borrowed from https://s3-us-east-2.amazonaws.com/cloudformation-templates-us-east-2/Managed_EC2_Batch_Environment.template
Description: geneticsort resources

Outputs:
  ECRArn:
    Value: !GetAtt [ECRRepository, Arn]
  ECRName:
    Value: !Ref ECRRepository
  ImageName:
    Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECRRepository}:${ImageTag}
  TableName:
    Value: !Ref DynamoTable2
  JobDefinition:
    Value: !Ref JobDefinition
  JobQueue:
    Value: !Ref JobQueue

Parameters:
  ImageTag:
    Type: String
    Description: Which container tag to run the job as

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16

  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: "10.0.0.0/24"
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: "True"

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "EC2 Security Group for instances launched in the VPC by Batch"
      VpcId: !Ref VPC

  BatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - batch.amazonaws.com
            Action:
              - sts:AssumeRole

  IamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EcsInstanceRole

  EcsInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
        - PolicyName: dynamo-put-results
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: ["dynamodb:PutItem"]
                Resource: !GetAtt [DynamoTable2, Arn]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole

  JobRole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
        - PolicyName: dynamo-put-results
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: ["dynamodb:PutItem"]
                Resource: !GetAtt [DynamoTable2, Arn]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole

  JobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      ContainerProperties:
        Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ECRRepository}:${ImageTag}
        Vcpus: 4
        Memory: 2000
        JobRoleArn: !GetAtt [JobRole, Arn]
        Environment:
          - Name: DYNAMODB_TABLE
            Value: !Ref DynamoTable2
          - Name: AWS_REGION
            Value: !Sub ${AWS::Region}

  JobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      Priority: 1
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref ComputeEnvironment

  ComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ComputeResources:
        Type: EC2
        MinvCpus: 0
        DesiredvCpus: 0
        MaxvCpus: 64
        InstanceTypes:
          - optimal
        Subnets:
          - !Ref Subnet
        SecurityGroupIds:
          - !Ref SecurityGroup
        InstanceRole: !Ref IamInstanceProfile
      ServiceRole: !Ref BatchServiceRole

  ECRRepository:
    Type: AWS::ECR::Repository

  DynamoTable2:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    Properties:
      GlobalSecondaryIndexes:
        - IndexName: by_fitness
          KeySchema:
            - AttributeName: family
              KeyType: HASH
            - AttributeName: fitness
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: key
          AttributeType: S
        - AttributeName: family
          AttributeType: S
        - AttributeName: fitness
          AttributeType: N
      KeySchema:
        - AttributeName: key
          KeyType: HASH
